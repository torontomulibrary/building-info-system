/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';

import '@rula/web-components';
import '@stencil/router';
import '@stencil/state-tunnel';


import {
  Building,
  BuildingMap,
  Floor,
  FloorMap,
} from './interface.js';
import {
  SearchResult,
  SearchResultGroup,
} from './interface';
import {
  MatchResults,
} from '@stencil/router';


declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface RulaDetailPanel {
      /**
       * A flag indicating if this detail panel is open.
       */
      'open': boolean;
    }

    interface RulaDrawer {
      /**
       * Flag indicating if the drawer is open.
       */
      'open': boolean;
    }

    interface RulaExpandableCard {
      'delay': number;
    }

    interface RulaGraphicDevice {
      'height': number;
      'width': number;
    }

    interface RulaBis {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl': string;
      /**
       * A URL used to load ICAL event information.
       */
      'icalUrl': string;
    }

    interface RulaMapNav {
      /**
       * The currently active Building.
       */
      'activeBuilding': Building;
      /**
       * The currently active Floor.
       */
      'activeFloor': Floor;
      /**
       * A list of all the Floors of the currenly active Building
       */
      'activeFloors': FloorMap;
      /**
       * A list of all the buildings.
       */
      'allBuildings': BuildingMap;
    }

    interface RulaSearchBox {
      'id': string;
      'searchResults': Array<SearchResult | SearchResultGroup>;
    }

    interface ViewBuilding {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl': string;
    }

    interface ViewEvent {
      /**
       * The URL from which to load calendar events (ical file).
       */
      'icalUrl': string;
    }

    interface ViewFaq {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl': string;
    }

    interface ViewHome {

    }

    interface ViewMap {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl': string;
      /**
       * The results coming from `stencil-router` that contain any URL matches.
       */
      'match': MatchResults;
    }
  }


    interface HTMLRulaDetailPanelElement extends StencilComponents.RulaDetailPanel, HTMLStencilElement {}

    var HTMLRulaDetailPanelElement: {
      prototype: HTMLRulaDetailPanelElement;
      new (): HTMLRulaDetailPanelElement;
    };
    

    interface HTMLRulaDrawerElement extends StencilComponents.RulaDrawer, HTMLStencilElement {}

    var HTMLRulaDrawerElement: {
      prototype: HTMLRulaDrawerElement;
      new (): HTMLRulaDrawerElement;
    };
    

    interface HTMLRulaExpandableCardElement extends StencilComponents.RulaExpandableCard, HTMLStencilElement {}

    var HTMLRulaExpandableCardElement: {
      prototype: HTMLRulaExpandableCardElement;
      new (): HTMLRulaExpandableCardElement;
    };
    

    interface HTMLRulaGraphicDeviceElement extends StencilComponents.RulaGraphicDevice, HTMLStencilElement {}

    var HTMLRulaGraphicDeviceElement: {
      prototype: HTMLRulaGraphicDeviceElement;
      new (): HTMLRulaGraphicDeviceElement;
    };
    

    interface HTMLRulaBisElement extends StencilComponents.RulaBis, HTMLStencilElement {}

    var HTMLRulaBisElement: {
      prototype: HTMLRulaBisElement;
      new (): HTMLRulaBisElement;
    };
    

    interface HTMLRulaMapNavElement extends StencilComponents.RulaMapNav, HTMLStencilElement {}

    var HTMLRulaMapNavElement: {
      prototype: HTMLRulaMapNavElement;
      new (): HTMLRulaMapNavElement;
    };
    

    interface HTMLRulaSearchBoxElement extends StencilComponents.RulaSearchBox, HTMLStencilElement {}

    var HTMLRulaSearchBoxElement: {
      prototype: HTMLRulaSearchBoxElement;
      new (): HTMLRulaSearchBoxElement;
    };
    

    interface HTMLViewBuildingElement extends StencilComponents.ViewBuilding, HTMLStencilElement {}

    var HTMLViewBuildingElement: {
      prototype: HTMLViewBuildingElement;
      new (): HTMLViewBuildingElement;
    };
    

    interface HTMLViewEventElement extends StencilComponents.ViewEvent, HTMLStencilElement {}

    var HTMLViewEventElement: {
      prototype: HTMLViewEventElement;
      new (): HTMLViewEventElement;
    };
    

    interface HTMLViewFaqElement extends StencilComponents.ViewFaq, HTMLStencilElement {}

    var HTMLViewFaqElement: {
      prototype: HTMLViewFaqElement;
      new (): HTMLViewFaqElement;
    };
    

    interface HTMLViewHomeElement extends StencilComponents.ViewHome, HTMLStencilElement {}

    var HTMLViewHomeElement: {
      prototype: HTMLViewHomeElement;
      new (): HTMLViewHomeElement;
    };
    

    interface HTMLViewMapElement extends StencilComponents.ViewMap, HTMLStencilElement {}

    var HTMLViewMapElement: {
      prototype: HTMLViewMapElement;
      new (): HTMLViewMapElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'rula-detail-panel': JSXElements.RulaDetailPanelAttributes;
    'rula-drawer': JSXElements.RulaDrawerAttributes;
    'rula-expandable-card': JSXElements.RulaExpandableCardAttributes;
    'rula-graphic-device': JSXElements.RulaGraphicDeviceAttributes;
    'rula-bis': JSXElements.RulaBisAttributes;
    'rula-map-nav': JSXElements.RulaMapNavAttributes;
    'rula-search-box': JSXElements.RulaSearchBoxAttributes;
    'view-building': JSXElements.ViewBuildingAttributes;
    'view-event': JSXElements.ViewEventAttributes;
    'view-faq': JSXElements.ViewFaqAttributes;
    'view-home': JSXElements.ViewHomeAttributes;
    'view-map': JSXElements.ViewMapAttributes;
    }
  }

  namespace JSXElements {

    export interface RulaDetailPanelAttributes extends HTMLAttributes {
      /**
       * A flag indicating if this detail panel is open.
       */
      'open'?: boolean;
    }

    export interface RulaDrawerAttributes extends HTMLAttributes {
      /**
       * An event emitted when this drawer closes.
       */
      'onDrawerClose'?: (event: CustomEvent) => void;
      /**
       * Flag indicating if the drawer is open.
       */
      'open'?: boolean;
    }

    export interface RulaExpandableCardAttributes extends HTMLAttributes {
      'delay'?: number;
    }

    export interface RulaGraphicDeviceAttributes extends HTMLAttributes {
      'height'?: number;
      'width'?: number;
    }

    export interface RulaBisAttributes extends HTMLAttributes {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl'?: string;
      /**
       * A URL used to load ICAL event information.
       */
      'icalUrl'?: string;
    }

    export interface RulaMapNavAttributes extends HTMLAttributes {
      /**
       * The currently active Building.
       */
      'activeBuilding'?: Building;
      /**
       * The currently active Floor.
       */
      'activeFloor'?: Floor;
      /**
       * A list of all the Floors of the currenly active Building
       */
      'activeFloors'?: FloorMap;
      /**
       * A list of all the buildings.
       */
      'allBuildings'?: BuildingMap;
      /**
       * An event emitted when the selected Building changes.
       */
      'onActiveBuildingChanged'?: (event: CustomEvent) => void;
      /**
       * An event emitted when the selected Floor changes.
       */
      'onActiveFloorChanged'?: (event: CustomEvent) => void;
    }

    export interface RulaSearchBoxAttributes extends HTMLAttributes {
      'id'?: string;
      'searchResults'?: Array<SearchResult | SearchResultGroup>;
    }

    export interface ViewBuildingAttributes extends HTMLAttributes {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl'?: string;
    }

    export interface ViewEventAttributes extends HTMLAttributes {
      /**
       * The URL from which to load calendar events (ical file).
       */
      'icalUrl'?: string;
    }

    export interface ViewFaqAttributes extends HTMLAttributes {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl'?: string;
    }

    export interface ViewHomeAttributes extends HTMLAttributes {

    }

    export interface ViewMapAttributes extends HTMLAttributes {
      /**
       * A URL used to access when loading data.
       */
      'apiUrl'?: string;
      /**
       * The results coming from `stencil-router` that contain any URL matches.
       */
      'match'?: MatchResults;
    }
  }

  interface HTMLElementTagNameMap {
    'rula-detail-panel': HTMLRulaDetailPanelElement
    'rula-drawer': HTMLRulaDrawerElement
    'rula-expandable-card': HTMLRulaExpandableCardElement
    'rula-graphic-device': HTMLRulaGraphicDeviceElement
    'rula-bis': HTMLRulaBisElement
    'rula-map-nav': HTMLRulaMapNavElement
    'rula-search-box': HTMLRulaSearchBoxElement
    'view-building': HTMLViewBuildingElement
    'view-event': HTMLViewEventElement
    'view-faq': HTMLViewFaqElement
    'view-home': HTMLViewHomeElement
    'view-map': HTMLViewMapElement
  }

  interface ElementTagNameMap {
    'rula-detail-panel': HTMLRulaDetailPanelElement;
    'rula-drawer': HTMLRulaDrawerElement;
    'rula-expandable-card': HTMLRulaExpandableCardElement;
    'rula-graphic-device': HTMLRulaGraphicDeviceElement;
    'rula-bis': HTMLRulaBisElement;
    'rula-map-nav': HTMLRulaMapNavElement;
    'rula-search-box': HTMLRulaSearchBoxElement;
    'view-building': HTMLViewBuildingElement;
    'view-event': HTMLViewEventElement;
    'view-faq': HTMLViewFaqElement;
    'view-home': HTMLViewHomeElement;
    'view-map': HTMLViewMapElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;